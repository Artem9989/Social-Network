{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Dialogs/Message/Message.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","DialogsCSS","dialogActive","alt","DialogAvatar","src","to","id","activeClassName","dialog","name","Message","AvatarFriends","messages","message","MyMessage","minLength1","minLengthCreator","maxLength15","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","NewMessage","Placeholder","Dialogs","state","dialogsPage","MyMessagesElements","MyMessages","map","dialogsElements","dialogs","messagesElements","dialogsItems","values","sendMessage","newDialogMessageText","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,8B,oBCArQD,EAAOC,QAAU,CAAC,aAAe,iCAAiC,OAAS,2BAA2B,aAAe,mC,oBCArHD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,yBAAyB,cAAgB,+BAA+B,UAAY,6B,+GCWtIC,EARI,SAACC,GAEhB,OAAS,sBAAKC,UAAWC,IAAWC,aAA3B,UACP,qBAAMC,IAAM,8CAAWH,UAAWC,IAAWG,aAAcC,IAAI,yEAC7D,eAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,GAAIC,gBAAiBP,IAAWQ,OAAjE,cAA2EV,EAAMW,KAAjF,W,kBCQOC,EAZC,SAACZ,GACb,OACI,gCACI,qBAAMI,IAAM,8CAAWH,UAAWC,IAAWW,cAAeP,IAAI,4IAChE,sBAAKL,UAAWC,IAAWY,SAA3B,UACG,sBAAKb,UAAWC,IAAWa,QAA3B,cAAsCf,EAAMe,QAA5C,OACC,sBAAMd,UAAWC,IAAWc,UAA5B,cAAyChB,EAAMgB,UAA/C,c,kCCmCVC,EAAaC,YAAiB,GAC9BC,EAAcC,YAAiB,IAY/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAVL,SAACtB,GAEpB,OACA,uBAAMwB,SAAYxB,EAAMyB,aAAxB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAW,CAACC,IAAUb,EAAYE,GAAeR,KAAM,uBAAwBV,UAAWC,IAAW6B,WAAYC,YAAY,+HACzJ,oCAAM,mJAAN,aAOOC,EAjDC,SAACjC,GAEb,IAAIkC,EAAQlC,EAAMmC,YAEdC,EAAqBF,EAAMG,WAAWC,KAAI,SAAAtB,GAAS,OAAI,cAAC,EAAD,CAASA,UAAWA,EAAUA,UAA8BR,GAAIQ,EAAUR,IAA5BQ,EAAUR,OAc/G+B,EAAkBL,EAAMM,QAAQF,KAAI,SAAA5B,GAAM,OAAI,cAAC,EAAD,CAAYC,KAAMD,EAAOC,KAAsBH,GAAIE,EAAOF,IAAtBE,EAAOF,OACzFiC,EAAmBP,EAAMpB,SAASwB,KAAI,SAAAvB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,QAA0BP,GAAIO,EAAQP,IAAxBO,EAAQP,OACrG,OACI,sBAAKP,UAAWC,IAAWsC,QAA3B,UACI,qBAAKvC,UAAWC,IAAWwC,aAA3B,SACKH,IAEL,sBAAKtC,UAAWC,IAAWY,SAA3B,UACK2B,EACAL,EACD,cAACf,EAAD,CAAqBG,SAhBb,SAACmB,GACjB3C,EAAM4C,YAAYD,EAAOE,gC,uBCDlBC,sBAAQC,aAhBD,SAACb,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAMF,SAACa,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAAUC,YAAmBJ,SAMzCK,IADeJ,CAEZb","file":"static/js/3.f06f6660.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3YE7l\",\"dialog\":\"Dialogs_dialog__39xz2\",\"dialogsItems\":\"Dialogs_dialogsItems__28Ilc\",\"dialogActive\":\"Dialogs_dialogActive__sUQtg\",\"messages\":\"Dialogs_messages__6LsGO\",\"message\":\"Dialogs_message__EWDRc\",\"NewMessage\":\"Dialogs_NewMessage__3NKCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogActive\":\"DialogItem_dialogActive__1MqsT\",\"dialog\":\"DialogItem_dialog__1QeaY\",\"DialogAvatar\":\"DialogItem_DialogAvatar__URuYz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__rpFhx\",\"message\":\"Message_message__hgitm\",\"AvatarFriends\":\"Message_AvatarFriends__13qxS\",\"MyMessage\":\"Message_MyMessage__1iVkg\"};","import React from 'react';\r\nimport DialogsCSS from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  //  let path ='/dialogs/' + props.id;\r\n    return ( <div className={DialogsCSS.dialogActive}>\r\n      <img  alt = 'нет фото' className={DialogsCSS.DialogAvatar} src='https://vraki.net/sites/default/files/inline/images/1551511784_4.jpg' />\r\n        <NavLink to={'/dialogs/' + props.id} activeClassName={DialogsCSS.dialog}> {props.name} </NavLink>\r\n    </div>\r\n    );\r\n}\r\nexport default DialogItem;","import React from 'react';\r\nimport DialogsCSS from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <img  alt = 'нет фото' className={DialogsCSS.AvatarFriends} src='https://w7.pngwing.com/pngs/921/228/png-transparent-comics-dialog-cartoon-s-dialog-clouds-dialog-material-picture-dialog-box-dialog.png' />\r\n            <div className={DialogsCSS.messages}>\r\n               <div className={DialogsCSS.message}> {props.message} </div>\r\n                <div  className={DialogsCSS.MyMessage}> {props.MyMessage} </div>   \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport DialogsCSS from './Dialogs.module.css';\r\n//import { NavLink } from 'react-router-dom';\r\nimport DialogItem from './DialogItem/DialogItem.jsx';\r\nimport Message from './Message/Message.jsx';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {Textarea} from '../Common/FormsControls/FormsControls'\r\nimport {minLengthCreator, maxLengthCreator , required} from '../../redux/utils/validators/Validators'\r\n//import { updateNewDialogMessageTextCreator, sendMessageCreator } from '../../redux/dialogs-reducer';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let MyMessagesElements = state.MyMessages.map(MyMessage => <Message MyMessage={MyMessage.MyMessage} key={MyMessage.id} id={MyMessage.id} />);\r\n    //const newDialogMessageText = state.newDialogMessageText;\r\n\r\n    // let onSendMessageChange = (e) => {\r\n    //     let text = e.target.value;\r\n    //     props.updateNewDialogMessageText(text);\r\n\r\n    // }\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newDialogMessageText);\r\n    }\r\n\r\n\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messagesElements = state.messages.map(message => <Message message={message.message} key={message.id} id={message.id} />);\r\n    return (\r\n        <div className={DialogsCSS.dialogs}>\r\n            <div className={DialogsCSS.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={DialogsCSS.messages}>\r\n                {messagesElements}\r\n                {MyMessagesElements}\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst minLength1 = minLengthCreator(1);\r\nconst maxLength15 = maxLengthCreator(15);\r\n\r\nconst addMessageForm = (props) => {\r\n\r\n    return(\r\n    <form onSubmit = {props.handleSubmit}>\r\n        <Field component={Textarea} validate ={[required, minLength1, maxLength15 ]} name={\"newDialogMessageText\"} className={DialogsCSS.NewMessage} Placeholder='Введите ваше сообщение' />\r\n        <div> <button>Отправить сообщение</button> </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(addMessageForm);\r\n\r\nexport default Dialogs;","// import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect } from '../../HOC/withAuthRedirect'\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newDialogMessageText) => {\r\n            dispatch (sendMessageCreator(newDialogMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect (mapStateToProps,mapDispatchToProps),\r\nwithAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}