{"version":3,"sources":["Components/Profile/MyPost/Posts/Post.module.css","Components/Profile/MyPost/MyPosts.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPost/Posts/Post.jsx","Components/Profile/MyPost/MyPosts.jsx","Components/Profile/MyPost/MyPostsContainer.jsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","redux/profile-selector.js","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","PostCSS","item","src","alt","message","like","countLike","MyPosts","React","memo","postElements","posts","reverse","map","post","id","postMessage","likeCount","MyPostsCSS","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostText","content","maxLength10","maxLengthCreator","minLength2","minLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","TextArea","Placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","ProfileCSS","Avatar","photos","small","fullName","aboutMe","contacts","facebook","vk","instagram","Preloader","Profile","store","getProfile","getStatus","getAuthorizedUserId","auth","getIsAuth","isAuth","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","requestStatus","Component","compose","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.f7e31073.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2rxp9\",\"like\":\"Post_like__3msQx\",\"countLike\":\"Post_countLike__3yte8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__18qcz\",\"postsBlock\":\"MyPosts_postsBlock__2Acsa\",\"TextArea\":\"MyPosts_TextArea__3zazb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map_content_img\":\"ProfileInfo_map_content_img__2U0zP\",\"div_content_img\":\"ProfileInfo_div_content_img__18jHb\",\"Avatar\":\"ProfileInfo_Avatar__2afhS\"};","import React from 'react';\r\nimport PostCSS from './Post.module.css';\r\n\r\nconst Post = (props ) => {\r\n\r\n    return (<div className={PostCSS.item}>\r\n        <img src=\"https://yt3.ggpht.com/a/AGF-l7_o6_rkFsRRlwewGkw_MjHBHEFNGK-1vZl7MQ=s400-c-k-c0xffffffff-no-rj-mo\" alt=\"no avatar\" />\r\n            {props.message}\r\n        <div>\r\n    <span className = {PostCSS.like}> Лайк </span>\r\n    <span className = {PostCSS.countLike}> {props.countLike} </span>\r\n            <span>Комменты </span>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default Post;","// import React, {Component} from 'react';\r\nimport React from 'react';\r\nimport Post from './Posts/Post.jsx';\r\nimport MyPostsCSS from './MyPosts.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator, minLengthCreator } from '../../../redux/utils/validators/Validators';\r\nimport {Textarea} from '../../Common/FormsControls/FormsControls'\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    \r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps !== this.props || nextState !== this.state;\r\n    //   }\r\n    let postElements = [...props.posts]\r\n    .reverse()\r\n    .map(post => <Post id={post.id} message={post.postMessage} countLike={post.likeCount} key={post.id} />)\r\n\r\n    // let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    // let onPostChange = () => {\r\n    //     let text = newPostElement.current.value;\r\n    //     props.updateNewPostText(text);\r\n    // }\r\n\r\n    return (<div className={MyPostsCSS.postsBlock}>\r\n        <h3> Мои посты </h3>\r\n        <AddPostFormRedux onSubmit={onAddPost} />\r\n        <div className={MyPostsCSS.content}>\r\n            {postElements}\r\n        </div>\r\n    </div>\r\n    );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst minLength2 = minLengthCreator(2);\r\nconst addNewPostForm = (props) => {\r\n    return (\r\n  \r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field component={Textarea} name={\"newPostText\"} className={MyPostsCSS.TextArea} Placeholder='Сообщение поста'\r\n                validate={[required, maxLength10, minLength2]} /> </div>\r\n            <div> <button>Создать пост </button> </div>\r\n            <div> <button>Удалить пост </button> </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst AddPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(addNewPostForm);\r\n\r\nexport default MyPosts;\r\n\r\n// const addNewPostForm = (props) => {\r\n//     return (\r\n//         <form onSubmit={props.handleSubmit}>\r\n//             <div><Field component={Textarea} name={\"newPostText\"} className={MyPostsCSS.TextArea} Placeholder='Сообщение поста'\r\n//                 validate={[required, maxLength10, minLength2]} /> </div>\r\n//             <div> <button>Создать пост </button> </div>\r\n//             <div> <button>Удалить пост </button> </div>\r\n//         </form>\r\n//     )\r\n// }\r\n\r\n\r\n// const maxLength10 = maxLengthCreator(10);\r\n// const minLength2 = minLengthCreator(2);\r\n\r\n\r\n\r\n// const AddPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(addNewPostForm);\r\n\r\n// class MyPosts extends Component {\r\n\r\n    \r\n//      shouldComponentUpdate(nextProps, nextState) {\r\n//          return nextProps !== this.props || nextState !== this.state;\r\n//        }\r\n//     render () {\r\n//         console.log('rerender');\r\n//     let postElements = this.props.posts.map(post => <Post id={post.id} message={post.postMessage} countLike={post.likeCount} key={post.id} />)\r\n\r\n//     // let newPostElement = React.createRef();\r\n\r\n//     let onAddPost = (values) => {\r\n//         this.props.addPost(values.newPostText);\r\n//     }\r\n\r\n//     // let onPostChange = () => {\r\n//     //     let text = newPostElement.current.value;\r\n//     //     props.updateNewPostText(text);\r\n//     // }\r\n\r\n//     return (<div className={MyPostsCSS.postsBlock}>\r\n//         <h3> Мои посты </h3>\r\n//         <AddPostFormRedux onSubmit={onAddPost} />\r\n//         <div className={MyPostsCSS.content}>\r\n//             {postElements}\r\n//         </div>\r\n//     </div>\r\n//     );\r\n// }\r\n// }\r\n\r\n\r\n\r\n// export default MyPosts;\r\n\r\n\r\n\r\n\r\n\r\n","//import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/Profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n        \r\n    }   \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewPostText: (text) => { \r\n        //     let action = updateNewPostTextActionCreator(text);\r\n        //     dispatch(action);\r\n        // },\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }   \r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps,mapDispatchToProps) (MyPosts);\r\nexport default MyPostsContainer;","import React, { useState, useEffect } from 'react';\r\n// import ProfileCSS from './ProfileInfo.module.css';\r\n// import Preloader from '../../Common/Preloader/Preloader';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n\r\n    const activateEditMode = () =>{\r\n        setEditMode(true);\r\n    }\r\n    \r\n    const deactivatedEditMode = () => {\r\n        setEditMode(false);\r\n       props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus( e.currentTarget.value);\r\n        \r\n    }\r\n\r\n        return (<>\r\n            <div>\r\n                { !editMode &&\r\n                    <span onDoubleClick={activateEditMode}> {props.status || \"Нет статуса\"}</span>\r\n                }\r\n            </div>\r\n            <div>\r\n                {editMode &&\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur= {deactivatedEditMode}  value={status}/>\r\n                }\r\n            </div>\r\n        </>);\r\n\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileCSS from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    \r\n    return (<div>\r\n        {/* <div className={ProfileCSS.div_content_img}>\r\n            <img className={ProfileCSS.map_content_img} src=\"http://www.brodyaga.ru/pages/photos/Russia/Barneo%20Camp%20Russia%201527668862(www.brodyaga.com).jpg\" alt='Нет фотографии' />\r\n        </div> */}\r\n        <div>\r\n            <ProfileStatusWithHooks status = {props.status} updateStatus= {props.updateStatus}/>\r\n            <img className={ProfileCSS.Avatar} src={props.profile.photos.small} alt='Фотография не загружена' />\r\n            <span> Я {props.profile.fullName}  </span>\r\n            <span> \\ Обо мне: {props.profile.aboutMe}  </span>\r\n            <div> Facebook: {props.profile.contacts.facebook} </div>\r\n            <div> VK: {props.profile.contacts.vk} </div>\r\n            <div> instagram: {props.profile.contacts.instagram}</div>\r\n   </div>\r\n    </div>\r\n    );\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPost/MyPostsContainer';\r\n//import ProfileCSS from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\r\n\r\nconst Profile = (props) => {\r\n    return (<div >\r\n        <ProfileInfo profile={props.profile} status ={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer store={props.store}/>\r\n    </div>\r\n    );\r\n}\r\nexport default Profile; ","export const getProfile = (state) => {\r\n    return state.profilePage.profile;\r\n}\r\n\r\nexport const getStatus = (state) => {\r\n    return state.profilePage.status;\r\n}\r\n\r\nexport const getAuthorizedUserId = (state) => {\r\n    return state.auth.id;\r\n}\r\n\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {getUserProfile, updateStatus, requestStatus} from '../../redux/Profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport {withAuthRedirect } from '../../HOC/withAuthRedirect'\r\nimport { getAuthorizedUserId, getProfile, getStatus, getIsAuth } from '../../redux/profile-selector';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                    <Redirect to=\"/login\" />\r\n                    //this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n\r\n//13241\r\n       this.props.getUserProfile(userId);\r\n       this.props.requestStatus(userId);\r\n            // .then(response => {\r\n            //     this.props.setUserProfile(response.data)\r\n            // });\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div>\r\n            <Profile {...this.props} profile = {this.props.profile} status = {this.props.status} updateStatus={this.props.updateStatus} />\r\n\r\n        </div>\r\n        \r\n    }\r\n\r\n}\r\n\r\n// compose(connect (mapStateToProps, {getUserProfile}),withAuthRedirect, withRouter) (ProfileContainer)\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: getProfile(state),\r\n    status: getStatus(state),\r\n    authorizedUserId: getAuthorizedUserId(state),\r\n    isAuth: getIsAuth(state),\r\n});\r\n\r\n\r\n// let AuthRedurectComponent = withAuthRedirect(ProfileContainer);\r\n// let WithUrlDataContainerComponenta = withRouter(AuthRedurectComponent);\r\n\r\n// export default connect (mapStateToProps, {getUserProfile}) (WithUrlDataContainerComponenta);\r\n\r\nexport default compose(connect (mapStateToProps, {getUserProfile, requestStatus, updateStatus}),withRouter , \r\nwithAuthRedirect\r\n) (ProfileContainer);"],"sourceRoot":""}