{"version":3,"sources":["redux/dialogs-reducer.js","Components/Login/Login.module.css","api/api.js","Components/Navbar/Navbar.module.css","reportWebVitals.js","redux/utils/validators/objects-helpers.js","redux/Users-reducer.js","Components/Common/Paginator/Paginator.jsx","assets/images/Avatar_Custome.jpg","Components/Users/User.jsx","Components/Users/Users.jsx","redux/users-selector.js","Components/Users/UsersContainer.jsx","Components/News/News.jsx","Components/Music/Music.jsx","Components/Settings/Settings.jsx","Components/Navbar/Friends/Friends.jsx","Components/Navbar/Navbar.jsx","Components/Navbar/NavbarContainer.jsx","Components/Header/Header.jsx","redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","redux/App-reducer.js","redux/siteBar-reducer.js","redux/redux-store.js","HOC/withSuspence.js","App.js","index.js","assets/images/Preloader.gif","Components/Common/Preloader/Preloader.jsx","Components/Navbar/Friends/Friends.module.css","Components/Header/Header.module.css","Components/Common/FormsControls/FormsControls.js","Components/Users/UsersCSS.module.css","Components/Common/Paginator/PaginatorCSS.module.css","redux/utils/validators/Validators.js","Components/Common/FormsControls/FormsControls.module.css","HOC/withAuthRedirect.js","redux/Profile-reducer.js"],"names":["SEND_MESSAGE","initialState","messages","id","message","MyMessages","MyMessage","dialogs","name","sendMessageCreator","newDialogMessageText","type","dialogsReducer","state","action","NewDialogText","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","Follow","userId","post","UnFollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_CURRENT_PAGE","SET_USERS","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","FollowingInProgress","FollowSuccess","UnFollowSuccess","ToggleIsFetching","ToggleFollowingProgress","followUnFollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","count","filter","followed","Paginator","onPageChanged","totalItemsCount","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","className","PaginatorCSS","Page","onClick","p","cn","selectPage","PageNumber","e","User","user","to","alt","UsersCSS","UserPhoto","src","photos","small","userPhoto","disabled","some","Users","props","settings","UsersPage","getUsersSuperSelector","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getIsAuth","auth","isAuth","UsersContainer","pageNumber","requestUsers","SetCurrentPage","this","Preloader","React","Component","compose","connect","bind","totalCount","withAuthRedirect","News","NewsCSS","Music","MusicCSS","Settings","SettingsCSS","Navbar","FriendsCSS","Friends","Friend","Avatar","NameFriends","href","friendName","friendsElements","friendsNav","friend","NavbarCSS","nav","item","activeClassName","activeLink","NavbarContainer","siteBarPage","Header","HeaderCSS","header","backHeader","logo","loginBlock","SET_USER_DATA","SetAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxFrom","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","required","LoginCSS","formSummaryError","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","siteBarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","WithSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","render","path","AppContainer","withRouter","promise","Promise","all","SocualApp","ReactDOM","document","getElementById","style","position","left","top","preloader","FormControl","input","meta","touched","children","hasError","FormsControlsCSS","formControl","Textarea","restProps","child","value","minLengthCreator","minLength","maxLengthCreator","maxLength","mapStateToPropsForRedirect","RedirectComponent","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","postMessage","likeCount","profile","addPostActionCreator","newPostText","setStatus","requestStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.f6f1cc1e.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState =  {\r\n    messages: [\r\n        { id: 1, message: 'Привет' },\r\n        { id: 2, message: 'Как ты?' },\r\n        { id: 3, message: 'Давно не виделись' },\r\n        { id: 4, message: 'Я соскучилась' },\r\n        { id: 5, message: 'Гав гав' },],\r\n    MyMessages: [\r\n        { id: 1, MyMessage: 'Привет, я артем' },\r\n        { id: 2, MyMessage: 'Как зовут тебя?' },\r\n        { id: 3, MyMessage: 'Гав гав' },],\r\n    dialogs: [\r\n        { id: 1, name: 'Дима' },\r\n        { id: 2, name: 'Вика' },\r\n        { id: 3, name: 'Алексей' },\r\n        { id: 4, name: 'Вася' },\r\n        { id: 5, name: 'Саша' },\r\n        { id: 6, name: 'Маша' },]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // case UPDATE_NEW_DIALOG_MESSAGE_TEXT:{\r\n        //     let stateCopy = {\r\n        //         messages: [...state,messages],\r\n        //         ...state\r\n        //     };\r\n        //   return {...state,\r\n        //         newDialogMessageText: action.NewDialogText\r\n        //     };\r\n        //     stateCopy.newDialogMessageText = action.NewDialogText;\r\n        \r\n        // }\r\n        case SEND_MESSAGE:{\r\n            let NewDialogText = action.newDialogMessageText;\r\n            return {\r\n                ...state,    \r\n                MyMessages: [...state.MyMessages, { id: 88, MyMessage: NewDialogText}],  \r\n            };\r\n           // stateCopy.messages = [...state.messages];\r\n           // stateCopy.MyMessages = [...state.MyMessages];\r\n           // stateCopy.dialogs = [...state.dialogs];\r\n           // stateCopy.MyMessages.push(newDialogMessage);\r\n          //  stateCopy.newDialogMessageText = '';\r\n            \r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageCreator = (newDialogMessageText) => ({type: SEND_MESSAGE, newDialogMessageText})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__3P1wR\"};","import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '8c22e4e3-27db-4208-b0f3-9e32e145fb57'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n getUsers (currentPage = 1, pageSize = 25) {\r\n        return (instance.get(`users?page=${currentPage}&count=${pageSize}`))\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    Follow(userId){\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    UnFollow(userId){\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId){\r\n        console.warn(\"Пожалуйста Используйте profileAPI объект\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/`+ userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n           return (instance.get(`auth/me`));\r\n       },\r\n    login (email, password, rememberMe = false) {\r\n        return (instance.post(`auth/login`, { email, password, rememberMe }));\r\n    },\r\n    logout (){\r\n        return (instance.delete(`auth/login`));\r\n    },\r\n   }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__U-YUT\",\"item\":\"Navbar_item__3EZwq\",\"activeLink\":\"Navbar_activeLink__2ZAzn\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\nexport const updateObjectInArray = (items,itemId, objPropName, newObjProps) => {\r\n     return items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n        return { ...u, ...newObjProps }\r\n    }\r\n    return u;\r\n})\r\n}","import { usersAPI } from '../api/api';\r\nimport {updateObjectInArray } from './utils/validators/objects-helpers'\r\n\r\nlet FOLLOW = 'FOLLOW';\r\nlet UNFOLLOW = 'UNFOLLOW';\r\nlet SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nlet SET_USERS = 'SET_USERS';\r\nlet SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nlet TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nlet TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 25,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    FollowingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage };\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                FollowingInProgress: action.isFetching\r\n                    ? [...state.FollowingInProgress, action.userId]\r\n                    : state.FollowingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray( state.users, action.userId, \"id\" , {followed: true})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: true }\r\n                //     }\r\n                //     return u;\r\n                // })\r\n\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray( state.users, action.userId, \"id\" , {followed: false})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: false }\r\n                //     }\r\n                //     return u;\r\n                // })\r\n\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }// users: action.users [...state.users, action.users]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const SetCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const SetTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const FollowSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const UnFollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const ToggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const ToggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\n// export const requestUsers = (currentPage, pageSize) => {\r\n//     return async (dispatch) => {\r\n//         dispatch(ToggleIsFetching(true));\r\n//         .then(data usersAPI.getUsers(currentPage, pageSize)\r\n//         dispatch(ToggleIsFetching(false));\r\n//         dispatch(setUsers(data.items));\r\n//         dispatch(SetTotalUsersCount(data.totalCount));\r\n//     }\r\n// }\r\n\r\nexport const requestUsers = (currentPage,pageSize) => {\r\n    return async (dispatch) => {\r\n    dispatch(ToggleIsFetching(true));\r\n   let data = await usersAPI.getUsers(currentPage, pageSize)\r\n            dispatch( ToggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(SetTotalUsersCount(data.totalCount));\r\n}\r\n}\r\n\r\nconst followUnFollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(ToggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(ToggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const Follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnFollowFlow(dispatch, userId, usersAPI.Follow.bind(usersAPI), FollowSuccess);\r\n    }\r\n}\r\n\r\nexport const UnFollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnFollowFlow(dispatch, userId, usersAPI.UnFollow.bind(usersAPI), UnFollowSuccess);\r\n\r\n        // dispatch(ToggleFollowingProgress(true, userId));\r\n        // let response = apiMethod(userId)\r\n        // if (response.data.resultCode === 0) {\r\n        //     dispatch(actionCreator(userId));\r\n        // }\r\n        // dispatch(ToggleFollowingProgress(false, userId));\r\n    }\r\n}\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport PaginatorCSS from './PaginatorCSS.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({currentPage,onPageChanged, totalItemsCount, pageSize, portionSize=25, ...props}) => {\r\n\r\n\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n        // if (i > 10) {\r\n        //     break;\r\n        // }\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n\r\n    return (\r\n\r\n            <div className={PaginatorCSS.Page}>\r\n                {portionNumber > 1 &&\r\n                <button onClick={() => {setPortionNumber(portionNumber - 1) }}> prev </button>}\r\n                {pages\r\n                .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                .map((p) => {\r\n                    return <span className={cn ({[PaginatorCSS.selectPage] : currentPage === p}, \r\n                        PaginatorCSS.PageNumber)}\r\n                        key={p}\r\n                        onClick={(e) => { onPageChanged(p) }} > |{p}|</span>\r\n                })}\r\n                {portionCount > portionNumber &&\r\n                <button onClick={() => {setPortionNumber(portionNumber + 1) }}> next </button>}\r\n            </div>\r\n)\r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/Avatar_Custome.d4919251.jpg\";","import React from 'react';\r\nimport UsersCSS from './UsersCSS.module.css';\r\nimport userPhoto from '../../assets/images/Avatar_Custome.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({user,FollowingInProgress, UnFollow, Follow}) => {\r\n\r\n    return (\r\n                <div>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={/profile/ + user.id}>\r\n                                <img  alt = 'нет фото' className={UsersCSS.UserPhoto} src={user.photos.small != null ? user.photos.small : userPhoto}>\r\n                                </img>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed?\r\n                             <button disabled = {FollowingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                UnFollow(user.id);\r\n                                }} >Отписаться</button>\r\n\r\n                                : <button disabled = {FollowingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                    Follow(user.id);\r\n                                }} >Подписаться </button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <span>\r\n                                <div> Имя: {user.name}</div>\r\n                                <div>Статус: {user.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>Город: Уфа</div>\r\n                                <div>Страна: Россия </div>\r\n                                {/* <div>Город: Уфа</div> {\"user.location.city\"}\r\n                            <div>Страна: Россия </div> {\"user.location.country\"} */}\r\n                            </span>\r\n                        </span>\r\n                    </span>\r\n                </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport UsersCSS from './UsersCSS.module.css';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({currentPage,onPageChanged, totalItemsCount, pageSize, users, ...props}) => {\r\n\r\n\r\n\r\n    // let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    // let pages = []\r\n    // for (let i = 1; i <= pagesCount; i++) {\r\n    //     pages.push(i);\r\n    //     if (i > 40) {\r\n    //         break;\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={UsersCSS.settings}>\r\n            <Paginator currentPage = {currentPage} onPageChanged={onPageChanged} totalItemsCount ={totalItemsCount} pageSize={pageSize}/>\r\n            {/* <div className={UsersCSS.Page}>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p && UsersCSS.selectPage}\r\n                        onClick={(e) => { props.onPageChanged(p) }} > |{p}|</span>\r\n                })}\r\n            </div> */}\r\n            <div>\r\n            {\r\n                users.map(u => <User user={u} key={u.id} FollowingInProgress={props.FollowingInProgress} Follow={props.Follow} UnFollow={props.UnFollow}/> )\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.UsersPage.users;\r\n}\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return getUsers(state).filter(u => true);\r\n}\r\n\r\nexport const getUsersSuperSelector =  createSelector(getUsers, (users) => {\r\n   return users.filter(u => true);\r\n});\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.UsersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.UsersPage.currentPage;\r\n}\r\nexport const getIsFetching= (state) => {\r\n    return state.UsersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.UsersPage.FollowingInProgress;\r\n}\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\n// сложный селектор с for, math m большие массивы. каунт ретурн","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Follow, UnFollow, SetCurrentPage, ToggleFollowingProgress, requestUsers } from '../../redux/Users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport {withAuthRedirect } from '../../HOC/withAuthRedirect'\r\nimport { compose } from 'redux';\r\nimport  { getUsersSuperSelector, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getIsAuth } from '../../redux/users-selector';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n        // this.props.ToggleIsFetching(true);\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.ToggleIsFetching(false);\r\n        //         this.props.setUsers(data.items)\r\n        //         this.props.SetTotalUsersCount(data.totalCount)\r\n        //     });\r\n    }\r\n\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n         this.props.SetCurrentPage(pageNumber)\r\n        // this.props.ToggleIsFetching(true);\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.ToggleIsFetching(false);\r\n        //         this.props.setUsers(data.items)\r\n        //     });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalItemsCount={this.props.totalItemsCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                UnFollow={this.props.UnFollow}\r\n                Follow={this.props.Follow}\r\n                users={this.props.users}\r\n                FollowingInProgress = {this.props.FollowingInProgress}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\n/*const mapStateToProps = (state) => {\r\n    return {\r\n        users: state.UsersPage.users,\r\n        pageSize: state.UsersPage.pageSize,\r\n        totalUsersCount: state.UsersPage.totalUsersCount,\r\n        currentPage: state.UsersPage.currentPage,\r\n        isFetching: state.UsersPage.isFetching,\r\n        FollowingInProgress: state.UsersPage.FollowingInProgress,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}*/\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector (state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        FollowingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state),\r\n    }\r\n}\r\n\r\n\r\n/*const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        Follow: (userId) => {\r\n            dispatch(FollowAC(userId));\r\n        },\r\n        UnFollow: (userId) => {\r\n            dispatch(UnFollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(SetCurrentPageAC(pageNumber));\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(SetTotalUsersCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(ToggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\r\n// let AuthRedurectComponent = withAuthRedirect(UsersContainer);\r\n\r\n\r\nexport default compose(connect(mapStateToProps,\r\n    {\r\n        Follow,\r\n        UnFollow,\r\n        // setUsers,\r\n        SetCurrentPage,\r\n        // SetTotalUsersCount,\r\n        // ToggleIsFetching,\r\n        ToggleFollowingProgress,\r\n        requestUsers\r\n    }),withAuthRedirect)(UsersContainer);\r\n\r\n// connect(mapStateToProps,\r\n//     {\r\n//         Follow,\r\n//         UnFollow,\r\n//         // setUsers,\r\n//         SetCurrentPage,\r\n//         // SetTotalUsersCount,\r\n//         // ToggleIsFetching,\r\n//         ToggleFollowingProgress,\r\n//         getUsers\r\n//     })(AuthRedurectComponent);","import React from 'react';\r\nimport NewsCSS from './News.module.css'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={NewsCSS.News}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport MusicCSS from './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={MusicCSS.Music}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport SettingsCSS from './Settings.module.css'\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className={SettingsCSS.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport FriendsCSS from './Friends.module.css';\r\n//import { NavLink } from 'react-router-dom';\r\n// Модуль создает класс с объектами:\r\n// const NavbarCSS = {\r\n//     'nav': 'Navbar_nav__14I7f',\r\n//     'item': 'Navbar_item__3_yZ-'\r\n// }\r\n\r\n// console.log(NavbarCSS);\r\n\r\n// let c1 = \"active\";\r\n// let c2 = \"item\";\r\n\r\n// let classes = c1 + \" \" + c2;\r\n// let classesNew = `${NavbarCSS.item} ${NavbarCSS.active}`;\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n            <div className={FriendsCSS.Friends}>\r\n                <div className={FriendsCSS.Friend}> <img className={FriendsCSS.Avatar} src=\"https://forumavatars.ru/img/avatars/0019/78/98/627-1590321886.jpg\" alt=\"Нет фото\"></img>\r\n                    <div className={FriendsCSS.NameFriends}><a href='s'> {props.friendName} </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport NavbarCSS from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Friends from './Friends/Friends.jsx'\r\n// Модуль создает класс с объектами:\r\n// const NavbarCSS = {\r\n//     'nav': 'Navbar_nav__14I7f',\r\n//     'item': 'Navbar_item__3_yZ-'\r\n// }\r\n\r\n// console.log(NavbarCSS);\r\n\r\n// let c1 = \"active\";\r\n// let c2 = \"item\";\r\n\r\n// let classes = c1 + \" \" + c2;\r\n// let classesNew = `${NavbarCSS.item} ${NavbarCSS.active}`;\r\n\r\nconst Navbar = (props) => {\r\n    let friendsElements = props.friendsNav.map (friend => <Friends friendName={friend.friendName} key = {friend.id} id={friend.id} />);\r\n    return (\r\n        <nav className={NavbarCSS.nav}>\r\n            <div className={`${NavbarCSS.item}`}>\r\n                <NavLink to=\"/profile\" activeClassName={NavbarCSS.activeLink}>Мой профиль </NavLink>\r\n            </div>\r\n            <div className={NavbarCSS.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={NavbarCSS.activeLink}>Сообщения </NavLink>\r\n            </div>\r\n            <div className={NavbarCSS.item}>\r\n                <NavLink to=\"/news\" activeClassName={NavbarCSS.activeLink}>Новости </NavLink>\r\n            </div>\r\n            <div className={NavbarCSS.item}>\r\n                <NavLink to=\"/music\" activeClassName={NavbarCSS.activeLink}>Музыка</NavLink>\r\n            </div>\r\n            <div className={NavbarCSS.item}>\r\n                <NavLink to=\"/settings\" activeClassName={NavbarCSS.activeLink}>Настройки</NavLink>\r\n            </div>\r\n            <div className={NavbarCSS.item}>\r\n                <NavLink to=\"/users\" activeClassName={NavbarCSS.activeLink}>Найти друзей</NavLink>\r\n            </div>\r\n            {friendsElements}\r\n        </nav>\r\n    );\r\n}\r\nexport default Navbar;","// import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from './Navbar';\r\n// import { friendsNav } from '../../redux/siteBar-reducer';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friendsNav: state.siteBarPage.friendsNav,\r\n    }   \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }   \r\n}\r\n\r\nconst NavbarContainer = connect (mapStateToProps,mapDispatchToProps) (Navbar);\r\nexport default NavbarContainer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport HeaderCSS from './Header.module.css'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={HeaderCSS.header}>\r\n            <div className={HeaderCSS.backHeader}>\r\n            <img className={HeaderCSS.logo} src='/logo.png' alt=\"no download\"/>\r\n            <div className = {HeaderCSS.loginBlock}>\r\n                {props.isAuth \r\n                ? <div> {props.login} <button onClick={props.logout}>Выход</button> </div>\r\n                : <NavLink to={'/login'}>Логин </NavLink> }\r\n            </div>\r\n            </div>\r\n           \r\n        </header>\r\n    );\r\n}\r\nexport default Header;","import { stopSubmit } from 'redux-form';\r\nimport { authAPI } from '../api/api';\r\n\r\nlet SET_USER_DATA = 'network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    //  isFetching: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const SetAuthUserData = (id, login, email, isAuth) => ({ type: SET_USER_DATA, payload: { id, login, email, isAuth } })\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data;\r\n        dispatch(SetAuthUserData(id, login, email, true));\r\n    }\r\n};\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n        \r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Ошибка\"\r\n                dispatch(stopSubmit(\"login\", { _error: message }));\r\n            }\r\n        }\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout()\r\n     \r\n            if (response.data.resultCode === 0) {\r\n                dispatch(SetAuthUserData(null, null, null, false))\r\n            }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n    return  <Header {...this.props} /> \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect (mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../Common/FormsControls/FormsControls'\r\nimport { required } from '../../redux/utils/validators/Validators'\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport LoginCSS from './Login.module.css';\r\n\r\nconst LoginForm = ({handleSubmit , error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field name={\"email\"} placeholder={\"Email\"} component={Input} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"} placeholder={\"Password\"} type={\"password\"} component={Input} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field name={\"rememberMe\"} type={\"checkbox\"} component={Input} /> Запомнить меня\r\n        </div>\r\n            {error && <div className={LoginCSS.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Зайти</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxFrom = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Логин</h1>\r\n        <LoginReduxFrom onSubmit={onSubmit} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { login })(Login);","import { getAuthUserData } from './auth-reducer';\r\n\r\nlet INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n    //  isFetching: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    dispatch(getAuthUserData());\r\n    //еще диспатч\r\n    //еще диспатч\r\n    //еще диспатч\r\n    //еще диспатч\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n    friendsNav: [\r\n        { id: 1, friendName: 'Влад' },\r\n        { id: 2, friendName: 'Саня' },\r\n        { id: 3, friendName: 'Вика' },\r\n        { id: 4, friendName: 'Паша' },\r\n        { id: 5, friendName: 'Гоша' },\r\n        { id: 6, friendName: 'Артур' },]\r\n\r\n};\r\n\r\nconst siteBarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default siteBarReducer;","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\r\nimport profileReducer from './Profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport siteBarReducer from './siteBar-reducer';\r\nimport usersReducer from './Users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from './App-reducer';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    siteBarPage: siteBarReducer,\r\n    UsersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\nwindow.store = store;\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React, { Suspense } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Preloader from '../Components/Common/Preloader/Preloader';\r\n\r\nexport const  WithSuspense = (Component) => {\r\n   return (props) => {\r\n    return <Suspense fallback={<Preloader/>} >\r\n    <Component {...props} />\r\n    </Suspense>\r\n   };\r\n}","import React, { Suspense } from 'react';\nimport './App.css';\nimport UsersContainer from './Components/Users/UsersContainer.jsx';\nimport News from './Components/News/News.jsx';\nimport Music from './Components/Music/Music.jsx';\nimport Settings from './Components/Settings/Settings.jsx';\nimport NavbarContainer from './Components/Navbar/NavbarContainer.jsx';\n//import ProfileContainer from './Components/Profile/ProfileContainer.jsx';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom'\n//import DialogsContainer from './Components/Dialogs/DialogsContainer';\nimport HeaderContainer from './Components/Header/HeaderContainer';\nimport Login from './Components/Login/Login';\nimport { initializeApp } from './redux/App-reducer';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Preloader from './Components/Common/Preloader/Preloader';\nimport store from './redux/redux-store.js'\nimport { Provider } from 'react-redux';\nimport { WithSuspense } from './HOC/withSuspence';\n\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer.jsx'));\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className='app-wrapper'>\n       \n        <HeaderContainer />\n        <Route render={() => <NavbarContainer />} />\n        <div className='app-wrapperContent'>\n          < Route path='/dialogs' render={WithSuspense (DialogsContainer)}/>\n          < Route path='/profile/:userId?' render={WithSuspense (ProfileContainer)}/>\n          < Route path='/News' render={() => <News />} />\n          < Route path='/Music' render={() => <Music />} />\n          < Route path='/Settings' render={() => <Settings />} />\n          < Route path='/Users' render={() => <UsersContainer />} />\n          < Route path='/login' render={() => <Login />} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(withRouter, connect(mapStateToProps, { initializeApp }))(App);\n\nconst SocualApp = (props) => {\n  return <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n    </BrowserRouter>\n}\n\nexport default SocualApp;\n\n","import reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport SocualApp from './App';\n\nReactDOM.render(\n  <SocualApp />,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n","export default __webpack_public_path__ + \"static/media/Preloader.f4c76084.gif\";","import React from 'react';\r\nimport preloader from '../../../assets/images/Preloader.gif';\r\n\r\nlet Preloader = (props) => {\r\n    return <>\r\n        <img  alt = 'нет фото' style = {{position: 'absolute', left: '50%', top: '50%'}} src = {preloader}/>\r\n        </>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Friends_Avatar__1-CM1\",\"Friends\":\"Friends_Friends__eu1dX\",\"Friend\":\"Friends_Friend__3ESqa\",\"NameFriends\":\"Friends_NameFriends__Kh7RB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__34h9n\",\"logo\":\"Header_logo__1WiXQ\",\"backHeader\":\"Header_backHeader__yz4tF\",\"loginBlock\":\"Header_loginBlock__21dq-\"};","import React from 'react';\r\nimport FormsControlsCSS from './FormsControls.module.css';\r\n\r\nconst FormControl = ({ input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={FormsControlsCSS.formControl + \" \" + (hasError ? FormsControlsCSS.error : \"\")}>\r\n            {children}\r\n            <div>\r\n                {hasError && <span> {error} </span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (<FormControl {...props} ><textarea {...input}{...restProps} /></FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (<FormControl {...props} ><input {...input}{...restProps} /></FormControl>)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserPhoto\":\"UsersCSS_UserPhoto__YzRuA\",\"selectPage\":\"UsersCSS_selectPage__3VCEA\",\"Page\":\"UsersCSS_Page__Wdiw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"PaginatorCSS_paginator__3qkur\",\"selectPage\":\"PaginatorCSS_selectPage__39KE_\",\"Page\":\"PaginatorCSS_Page__19UVm\",\"pageNumber\":\"PaginatorCSS_pageNumber__33TFV\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'пустое поле';\r\n    \r\n}\r\n\r\n\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value && value.length < minLength) return `Минимальное количество ${minLength} символа`;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) \r\n    return `Максимальное количество ${maxLength} символа`;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__H5aXI\",\"error\":\"FormsControls_error__2vbxM\",\"formSummaryError\":\"FormsControls_formSummaryError__FwwtV\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const  withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n    if (!this.props.isAuth) return <Redirect to = '/login'></Redirect>\r\n   return <Component {...this.props} />\r\n        }\r\n}\r\n\r\n\r\nlet ConnectedAuthRedurectComponent = connect( mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n\r\nreturn ConnectedAuthRedurectComponent;\r\n}","import { profileAPI, usersAPI } from '../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, postMessage: 'Привет', likeCount: 12 },\r\n        { id: 2, postMessage: 'Меня зовут Артем', likeCount: 22 },\r\n        { id: 3, postMessage: 'Я люблю React', likeCount: 32 },\r\n        { id: 4, postMessage: 'Я соскучилась', likeCount: 42 },\r\n        { id: 5, postMessage: 'Мур' },\r\n        { id: 6, postMessage: 'Гав гав' }],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.profile };\r\n\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                postMessage: action.newPostText,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId),\r\n            };\r\n        // stateCopy.posts = [...state.posts];\r\n        // stateCopy.posts.push(newPost);\r\n        // stateCopy.newPostText = '';\r\n\r\n        case SET_STATUS:\r\n            return { ...state, status: action.status };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\n\r\nexport const requestStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}